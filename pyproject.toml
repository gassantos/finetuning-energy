[project]
name = "finetuning-energy"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "accelerate==1.9.0",
    "bitsandbytes==0.46.1",
    "colorama>=0.4.6",
    "datasets>=4.0.0",
    "dynaconf>=3.2.11",
    "gpustat>=1.1.1",
    "huggingface-hub>=0.33.4",
    "nvitop>=1.5.1",
    "openpyxl>=3.1.5",
    "pandas>=2.0.0",
    "peft>=0.16.0",
    "pynvml>=12.0.0",
    "python-dotenv>=1.1.1",
    "scikit-learn>=1.3.0",
    "structlog>=24.1.0",
    "tiktoken>=0.9.0",
    "transformers>=4.53.2",
    "trl>=0.19.1",
    "wandb>=0.21.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.1",
    "pytest-timeout>=2.3.1",
    "coverage>=7.6.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]

test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.1",
    "pytest-timeout>=2.3.1",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
    "network: marks tests that require network access",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
timeout = 300

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "config"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "datasets.*",
    "peft.*",
    "wandb.*",
    "nvitop.*",
    "pynvml.*",
    "bitsandbytes.*",
    "accelerate.*",
    "torch.*",
]
ignore_missing_imports = true
